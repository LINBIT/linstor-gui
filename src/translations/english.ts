// SPDX-License-Identifier: GPL-3.0
//
// Copyright (c) 2024 LINBIT
//
// Author: Liang Li <liang.li@linbit.com>

const en = {
  common: {
    disconnected: 'DISCONNECTED',
    connected: 'CONNECTED',
    search: 'Search',
    property: 'Properties',
    add: 'Add',
    create: 'Create',
    created: 'Created Time',
    view: 'View',
    edit: 'Edit',
    migrate: 'Migrate',
    delete: 'Delete',
    lost: 'Lost',
    nodes: 'Nodes',
    resources: 'Resources',
    volumes: 'Volumes',
    error_reports: 'Error Reports',
    disk_creation_records: 'Disk creation records',
    deploy: 'Deploy',
    submit: 'Submit',
    cancel: 'Cancel',
    snapshot: 'Snapshot',
    success: 'Success',
    reset: 'Reset',
    name: 'Name',
    action: 'Action',
    resource_group: 'Resource Group',
    controller: 'Controller',
    add_property: 'Add Property',
    controller_properties: 'Controller Properties',
    back: 'Back',
    activate: 'Set as active',
    detail: 'Detail',
    storage_pool: 'Storage Pool',
    node: 'Node',
    spawn: 'Spawn',
    spawn_on_create: 'Spawn on create',
    port: 'Port',
    size: 'Size',
    state: 'State',
    place_count: 'Place Count',
    diskless_on_remaining: 'Diskless on remaining',
    replication_mode: 'Replication Mode',
    async: 'Asynchronous(A)',
    semi_sync: 'Memory synchronous(B)',
    sync: 'Synchronous(C)',
    resource_definition: 'Resource Definition',
    volume_number: 'Volume Number',
    created_on: 'Created On',
    usage_status: 'Usage Status',
    connection_status: 'Connection Status',
    add_column: 'Add Column',
    column_data_index: 'Column Data Index',
    column_title: 'Column Title',
    reset_column: 'Reset Column',
    resource_definition_name: 'Resource Definition Name',
    allocate_method: 'Allocate Method',
    auto: 'Auto',
    manual: 'Manual',
    device_path: 'Device Path',
    resource: 'Resource',
    upload: 'Upload',
    save: 'Save',
    settings: 'Settings',
    status: 'Status',
    confirm: 'Confirm',
    stop: 'Stop',
    start: 'Start',
    starting: 'Starting...',
    stopping: 'Stopping...',
    deleting: 'Deleting...',
    logout: 'Logout',
    user: 'User',
    password: 'Password',
    login: 'Login',
    username: 'Username',
    logs: 'Logs',
    log_detail: 'Log Detail',
    clear_all_logs: 'Clear All Logs',
    mark_all_as_read: 'Mark All as Read',
    back_to_logs: 'Back to Logs',
    mark_as_read: 'Mark as Read',
    primary: 'Primary',
    adjust: 'Adjust',
    clone: 'Clone',
    external_name: 'External Name',
    use_zfs_clone: 'Use ZFS Clone',
    toggle: 'Toggle',
    layers: 'Layers',
    volume_definition: 'Volume Definition',
    volume_number_short: 'V#',
    keyword: 'Keyword',
    action_short: 'A',
    resource_definition_properties: 'Resource Definition Properties',
    volume_definition_properties: 'Volume Definition Properties',
    storage_pool_overview: 'Storage Pool Overview',
    free_capacity: 'Free Capacity',
    used_capacity: 'Used Capacity',
    faulty_resource: 'Faulty Resource',
    all_resources_are_healthy: 'All resources are healthy',
    creating: 'Creating...',
    failed: 'Failed',
    total_items: 'Total {{total}} items',
  },
  menu: {
    dashboard: 'Dashboard',
    support: 'Support',
    inventory: 'Inventory',
    node: 'Nodes',
    controller: 'Controller',
    storage_pools: 'Storage Pools',
    error_reports: 'Error Reports',
    software_defined: 'Storage Configuration',
    resource_overview: 'Resource Overview',
    resource_groups: 'Resource Groups',
    resource_definitions: 'Resource Definitions',
    volume_definitions: 'Volume Definitions',
    resources: 'Resources',
    volumes: 'Volumes',
    node_ip_addrs: 'IP Addresses',
    remotes: 'Remote',
    linstor: 'LINSTOR',
    s3: 'S3',
    settings: 'Settings',
    gateway: 'Gateway',
    iscsi: 'iSCSI',
    nfs: 'NFS',
    'nvme-of': 'NVMe-oF',
    snapshot: 'Snapshots',
    grafana: 'Grafana',
    users: 'Users',
    'backup&dr': 'Backup / DR',
    schedule_list: 'Schedule',
  },
  node: {
    node_list: 'Node List',
    node_name: 'Name',
    default_ip: 'IP',
    default_port: 'Port',
    node_type: 'Type',
    node_status: 'Status',
    node_detail: 'Node Detail',
    create_node: 'Create Node',
    edit_node: 'Edit Node',
    lost_tooltip_offline_required: 'Only offline nodes can be marked as lost',
  },
  node_detail: {
    title: 'Node Detail',
    node_name: 'Node name',
    node_type: 'Node type',
    node_status: 'Node status',
    resource_layers: 'Resource layers',
    storage_providers: 'Storage providers',
    network_interfaces: 'Network interfaces',
    storage_pool_info: 'Storage pool info',
    resource_info: 'Resource info',
    add_network_interface: 'Add Network Interface',
  },
  storage_pool: {
    list: 'Storage Pool List',
    name: 'Name',
    node_name: 'Node Name',
    network_preference: 'Network Preference',
    disk: 'Disk',
    provider_kind: 'Provider Kind',
    capacity: 'Capacity',
    free_capacity: 'Free Capacity',
    total_capacity: 'Total Capacity',
    supports_snapshots: 'Supports Snapshots',
    show_default: 'Show Default',
    add_title: 'Add Storage Pool',
    add_description:
      'A storage pool identifies physically-backed storage that LINSTOR storage volumes consume. You can assign a storage pool to other LINSTOR objects, such as LINSTOR resources, resource definitions, or resource groups. LINSTOR storage volumes created from these objects will consume physical storage from the storage pool assigned to the object.',
    new_device: 'New Device',
    new_device_description: 'When creating storage pool using new device, please make sure the device is empty.',
    existing_device: 'Existing Device',
    existing_device_description:
      'To use an existing device, first create a volume group and logical volume by using LVM CLI commands.',
    storage_pool_name: 'Storage Pool Name',
    node: 'Node',
    type: 'Type',
    lvm_pool: 'Volume Group/Thin Pool',
    zfs_pool: 'Pool Name',
    zfs_toast: 'You need to install and configure ZFS on the node before creating a ZFS storage pool.',
    multiple_nodes: 'Multiple Nodes',
    device_path: 'Device Path',
    device_path_tooltip:
      'Select the path of the physical device that will back the storage pool. The device should be empty.',
    advanced_options: 'Advanced Options',
    lvm_pool_name: 'LVM Pool Name',
    sed: 'SED Enabled',
    vdo: 'VDO Enabled',
    zfs_pool_name: 'ZFS Pool Name',
  },
  ip_address: {
    list: 'IP Addresses List',
    node: 'Node',
    ip_address: 'IP Address',
    tcp_port: 'TCP Port',
    alias: 'Alias',
    is_management_network: 'Active',
  },
  error_report: {
    id: 'ID',
    time: 'Time',
    module: 'Module',
    content: 'Content',
    detail_title: 'Error Report Detail',
    list_title: 'Error Report List',
    download_sos: 'Download SOS Report',
    time_range: 'Time Range',
  },
  dashboard: {
    title: 'Dashboard',
  },
  resource_group: {
    list: 'Resource Group List',
    name: 'Resource Group Name',
    place_count: 'Place Count',
    storage_pools: 'Storage Pool(s)',
    replication: 'Replication Mode',
    auto: 'Auto',
    async: 'Asynchronous(A)',
    semi_sync: 'Memory synchronous(B)',
    sync: 'Synchronous(C)',
    diskless: 'Diskless on remaining',
    auto_select_filter: 'Auto Select Filter',
    properties: 'Properties',
    description: 'Description',
    create: 'Create Resource Group',
    storage_providers: 'Storage Providers',
    linstor_layers: 'LINSTOR Layers',
    drbd_protocol: 'DRBD Protocol',
    spawn_on_create: 'Spawn on create',
    storage_pool: 'Storage Pool',
    show_advanced: 'Show advanced setting',
    hide_advanced: 'Hide advanced settings',
    replicas_on_same: 'Replicas On Same',
    do_not_place_with: 'Do Not Place With',
    replicas_on_different: 'Replicas On Different',
    do_not_place_with_regex: 'Do Not Place With Regex',
  },
  resource_definition: {
    name: 'Name',
    list: 'Resource Definition List',
    resource_group_name: 'Resource Group Name',
    size: 'Size',
    port: 'Port',
    state: 'State',
    create: 'Create Resource Definition',
    edit: 'Edit Resource Definition',
  },
  volume_definition: {
    name: 'Name',
    list: 'Volume Definition List',
    resource_group_name: 'Resource Group Name',
    create: 'Create Volume Definition',
  },
  resource: {
    list: 'Resource List',
    overview: 'Resource Overview',
    create: 'Create Resource',
    edit: 'Edit Resource',
    create_snapshot: 'Create Snapshot',
    migrate: 'Migrate Resource',
    resource: 'Resource',
    from: 'From Node',
    to: 'To Node',
    connection_status: 'Connections',
    add_disk: 'Add Disk',
    remove_disk: 'Remove Disk',
    search_placeholder: 'Search by resource name or aux property value',
  },
  volume: {
    list: 'Volume List',
    device_name: 'Device Name',
    allocated: 'Allocated',
    in_use: 'In Use',
    allocated_size: 'Allocated Size',
    reserved_size: 'Reserved Size',
    resource_volume: 'Resource/VolumeNumber',
  },
  controller: {
    controller_detail: 'Controller Detail',
  },
  // Remote / Linstor
  linstor: {
    list: 'LINSTOR List',
  },
  iscsi: {
    list: 'iSCSI List',
    create: 'iSCSI Create',
    iqn: 'IQN',
    resource_group: 'Resource Group',
    service_ips: 'Service IP',
    on_node: 'On Node',
    linstor_state: 'LINSTOR State',
    service_state: 'Service State',
    lun: 'LUN',
    add_volume: 'Add Volume',
    delete_volume: 'Delete Volume',
    adding_volume: 'Adding Volume',
    deleting_volume: 'Deleting Volume',
    add_service_ip: 'Add Service IP',
  },
  nfs: {
    list: 'NFS List',
    create: 'NFS Create',
    name: 'Name',
    size: 'Size',
    service_ip: 'Service IP',
    on_node: 'On Node',
    export_path: 'Export Path',
    linstor_state: 'LINSTOR State',
    service_state: 'Service State',
    file_system: 'File System',
    volumes: 'Volumes',
    allowed_ips: 'Allowed IPs',
  },
  nvme: {
    list: 'NVMe-oF List',
    nqn: 'NQN',
    create: 'NVMe-oF Create',
    resource_group: 'Resource Group',
    service_ip: 'Service IP',
    on_node: 'On Node',
    linstor_state: 'LINSTOR State',
    service_state: 'Service State',
    lun: 'LUN',
    add_volume: 'Add Volume',
    delete_volume: 'Delete Volume',
    adding_volume: 'Adding Volume',
    deleting_volume: 'Deleting Volume',
    add_service_ip: 'Add Service IP',
  },
  snapshot: {
    list: 'Snapshot List',
    resource_name: 'Resource Name',
    node_names: 'Node Names',
    snapshot_name: 'Snapshot Name',
    volumes: 'Volumes',
    create: 'Create Snapshot',
    nodes: 'Nodes',
    create_failed: 'Create Snapshot Failed',
    create_success: 'Create Snapshot Success',
    rollback: 'Rollback',
    rollback_snapshot: 'Rollback Snapshot',
    rollback_confirmation_message: 'Are you sure you want to rollback resource {{resource}} to snapshot {{snapshot}}?',
    rollback_warning:
      'Warning: This operation will revert the resource to the state of the selected snapshot. Any data changes after the snapshot was created will be lost.',
    rollback_usage_warning: 'The resource must not be in use. That is, the resource must not be mounted on any nodes.',
    restore: 'Restore',
    restore_snapshot: 'Restore Snapshot',
    restore_success: 'Restore succeeded',
    restore_failed: 'Restore failed',
    creating_resource: 'Creating resource definition...',
    resource_created: 'Resource definition created successfully',
    resource_creation_failed: 'Failed to create resource definition',
    restoring_volume_definition: 'Restoring volume definition...',
    volume_definition_restored: 'Volume definition restored successfully',
    restoring: 'Restoring snapshot...',
    source_info: 'Source Information',
    source_resource: 'Source Resource',
    target_resource: 'Target Resource',
    select_source: 'Select source resource',
    select_snapshot: 'Select snapshot',
    select_target: 'Select target resource',
    resource: 'Resource',
    snapshot: 'Snapshot',
    new_resource_tip: 'If you enter a new resource name, it will be created automatically',
  },
  users: {
    description: 'You can enable or disable user authentication from here.',
    authentication: 'User authentication',
    no_user: 'There are no users created yet.',
    add_a_user: 'Add a user',
    reset_password: 'Reset password',
    delete_user: 'Delete user',
    new_password: 'New password',
    confirm_password: 'Confirm password',
    change_password: 'Change password',
    current_password: 'Current password',
    username: 'Username',
    password: 'Password',
    add: 'Add',
    password_changed: 'Password changed successfully',
    password_reset: 'Password reset successfully',
    password_change_failed: 'Password change failed',
    // UserManagement page
    title: 'Authentication & Users',
    delete_user_title: 'Delete the user',
    delete_user_description: 'Are you sure to delete this user?',
    authentication_enabled: 'Authentication is now enabled successfully',
    authentication_disabled: 'Authentication is now disabled successfully',
    authentication_update_failed: 'Failed to update the authentication status',
    user_description: 'User',
    switch_on: 'On',
    switch_off: 'Off',
    yes: 'Yes',
    no: 'No',
  },
  remote: {
    list: 'Remote List',
    name: 'Name',
    type: 'Type',
    Info: 'Info',
    backups: 'Backups',
    endpoint: 'Endpoint',
    bucket: 'Bucket',
    region: 'Region',
    access_key: 'Access Key',
    secret_key: 'Secret Key',
    url: 'URL',
    use_path_style: 'Use Path Style',
    backup_count: 'Backup Count',
  },
  schedule: {
    list: 'Schedule List',
    name: 'Name',
    type: 'Type',
    status: 'Status',
    time: 'Time',
    last_run_time: 'Last Run Time',
    next_run_time: 'Next Run Time',
    create: 'Create Schedule',
    edit: 'Edit Schedule',
    delete: 'Delete Schedule',
    schedule_name: 'Schedule Name',
    schedule_type: 'Schedule Type',
    schedule_status: 'Schedule Status',
    full_cron: 'Full',
    inc_cron: 'Incremental',
    keep_local: 'Keep Local',
    keep_remote: 'Keep Remote',
    on_failure: 'On Failure',
    // Schedule by resource page
    schedule_list: 'Schedule List',
    resource: 'Resource',
    remote: 'Remote',
    schedule: 'Schedule',
    last: 'Last',
    next: 'Next',
    planned_inc: 'Planned Inc',
    planned_full: 'Planned Full',
    reason: 'Reason',
    schedules: 'Schedules',
    show_all: 'Show All',
    enable: 'Enable',
    disable: 'Disable',
    enabled: 'Enabled',
    disabled: 'Disabled',
    resource_definition: 'Resource-Definition',
    resource_group: 'Resource-Group',
    controller: 'Controller',
    // Confirmation messages
    enable_schedule_confirm: 'Are you sure you want to enable this schedule?',
    disable_schedule_confirm: 'Are you sure you want to disable this schedule?',
    delete_schedule_confirm: 'Are you sure you want to delete this schedule?',
    delete_schedule_warning: 'This action cannot be undone!',
    // Success/Error messages
    schedule_enabled_success: 'Schedule enabled successfully',
    schedule_disabled_success: 'Schedule disabled successfully',
    schedule_deleted_success: 'Schedule deleted successfully',
    schedule_enable_failed: 'Failed to enable schedule',
    schedule_disable_failed: 'Failed to disable schedule',
    schedule_delete_failed: 'Failed to delete schedule',
    resource_details_load_failed: 'Failed to load resource details',
    // Enable Schedule Form
    enable_schedule: 'Enable Schedule',
    remote_name: 'Remote Name',
    resource_name: 'Resource Name',
    resource_group_name: 'Resource Group Name',
    node_name: 'Node Name',
    select_remote_name: 'Select remote name',
    select_schedule_name: 'Select schedule name',
    select_resource_name: 'Select resource name',
    select_resource_group_name: 'Select resource group name',
    select_node_name: 'Select node name',
    please_select_remote_name: 'Please select the remote name!',
    please_select_schedule_name: 'Please select the schedule name!',
    schedule_enabled_successfully: 'Schedule enabled successfully!',
    failed_to_enable_schedule: 'Failed to enable schedule',
    failed_to_fetch_schedule_list: 'Failed to fetch schedule list',
    failed_to_fetch_remote_list: 'Failed to fetch remote list',
    failed_to_fetch_resource_list: 'Failed to fetch resource list',
    failed_to_fetch_resource_group_list: 'Failed to fetch resource group list',
  },

  settings: {
    title: 'Settings',
    general: 'General',
    custom_logo: 'Custom Logo',
    custom_logo_description:
      'You can select either a local SVG file or a remote URL. The URL can point to any image type.',
    logo: 'Logo',
    url: 'URL',
    gateway: 'Gateway',
    linstor_gateway: 'LINSTOR Gateway',
    linstor_gateway_description:
      'Manages Highly-Available iSCSI targets and NFS exports via LINSTOR. Installing linstor-gateway is a prerequisite for enabling this feature. After enabling this feature, the Gateway entry will be displayed in the left-side menu.',
    passphrase: 'Passphrase',
    gateway_mode: 'Gateway Mode',
    gateway_mode_description:
      'Installing linstor-gateway is a prerequisite for enabling this feature. And ensure that the endpoint is correctly configured to allow communication between the LINSTOR Gateway and the LINSTOR Server.',
    custom_host: 'Custom Host',
    custom_host_description:
      "When the custom host is enabled, you need to enter the LINSTOR Gateway API endpoints in the 'Custom API' section below. The default value is the LINSTOR server IP + 8080, like http://192.168.1.1:8080/. If a custom port or different IP is used, adjust the endpoint accordingly.",
    custom_api: 'Custom API',
    grafana: 'Grafana',
    grafana_dashboard: 'Grafana Dashboard',
    grafana_description:
      'Here you can configure the Grafana Dashboard. Once set up, an entry will be displayed in the left-side menu.',
    grafana_url: 'Grafana URL',
    available: 'Available',
    not_available: 'Not Available',
    linstor_passphrase: 'LINSTOR Passphrase',
    linstor_passphrase_loading: 'Loading passphrase status',
    passphrase_not_set: 'Passphrase not set',
    linstor_locked: 'LINSTOR is locked',
    linstor_unlocked: 'LINSTOR is unlocked',
    set_passphrase: 'Set Passphrase',
    unlock_passphrase: 'Unlock Passphrase',
    please_input_passphrase: 'Please input your passphrase!',
    enter_passphrase: 'Enter passphrase',
    confirm_passphrase: 'Confirm Passphrase',
    please_confirm_passphrase: 'Please confirm your passphrase!',
    passphrase_not_match: 'The two passphrases do not match!',
    confirm_passphrase_placeholder: 'Confirm passphrase',
    logo_size_error: 'The logo file size should not exceed 16KB.',
  },
  about: {
    linstor_version: 'LINSTOR VERSION',
    ui_version: 'UI Version',
    controller_ip: 'Controller Binding IP',
    controller_active_on: 'Controller Active On',
    trademark:
      'LINSTOR-GUI is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 3 of the License. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.',
    // Unofficial build modal
    unofficial_build_attention: 'Attention! You are using an unsupported build of this software.',
    unofficial_build_description: 'By acquiring an official version through a support subscription from LINBIT:',
    unofficial_build_benefit_support: 'You get access to the LINBIT expert support team.',
    unofficial_build_benefit_packages: 'You get access to prebuilt packages for the whole LINBIT SDS stack.',
    unofficial_build_benefit_development: 'You support the continued development of the LINBIT SDS stack.',
    unofficial_build_get_official: 'For Official Builds',
    // Header tools
    unofficial_build_header_attention: 'Attention! You are using an unsupported build.',
    unofficial_build_header_get_official: 'For Official Builds',
  },
};

export default en;
